import{_ as e,c as s,o as t,U as a}from"./chunks/framework.WPXu0_gW.js";const _=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"auto/ClassReflections_GetPropertieNamesInJsonFormat_T_().md","filePath":"auto/ClassReflections_GetPropertieNamesInJsonFormat_T_().md"}'),i={name:"auto/ClassReflections_GetPropertieNamesInJsonFormat_T_().md"},r=a('<h4 id="servicenow-core" tabindex="-1"><a href="./" title="index">ServiceNow.Core</a> <a class="header-anchor" href="#servicenow-core" aria-label="Permalink to &quot;[ServiceNow.Core](index.md &#39;index&#39;)&quot;">​</a></h4><h3 id="snow-core-utils-classreflections" tabindex="-1"><a href="./SNow_Core_Utils.html" title="SNow.Core.Utils">SNow.Core.Utils</a>.<a href="./ClassReflections.html" title="SNow.Core.Utils.ClassReflections">ClassReflections</a> <a class="header-anchor" href="#snow-core-utils-classreflections" aria-label="Permalink to &quot;[SNow.Core.Utils](SNow_Core_Utils.md &#39;SNow.Core.Utils&#39;).[ClassReflections](ClassReflections.md &#39;SNow.Core.Utils.ClassReflections&#39;)&quot;">​</a></h3><h2 id="classreflections-getpropertienamesinjsonformat-t-method" tabindex="-1">ClassReflections.GetPropertieNamesInJsonFormat&lt;T&gt;() Method <a class="header-anchor" href="#classreflections-getpropertienamesinjsonformat-t-method" aria-label="Permalink to &quot;ClassReflections.GetPropertieNamesInJsonFormat&amp;lt;T&amp;gt;() Method&quot;">​</a></h2><p>Return a list of json property names found, if no json name is found per property, it return the property name instead</p><div class="language-csharp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> static</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> System</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Collections</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Generic</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">List</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">GetPropertieNamesInJsonFormat</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">T</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;();</span></span></code></pre></div><h4 id="type-parameters" tabindex="-1">Type parameters <a class="header-anchor" href="#type-parameters" aria-label="Permalink to &quot;Type parameters&quot;">​</a></h4><p><a name="SNow_Core_Utils_ClassReflections_GetPropertieNamesInJsonFormat_T_()_T"></a><code>T</code><br> Model type to extract json property names</p><h4 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><a href="https://docs.microsoft.com/en-us/dotnet/api/System.Collections.Generic.List-1" title="System.Collections.Generic.List`1" target="_blank" rel="noreferrer">System.Collections.Generic.List&lt;</a><a href="https://docs.microsoft.com/en-us/dotnet/api/System.String" title="System.String" target="_blank" rel="noreferrer">System.String</a><a href="https://docs.microsoft.com/en-us/dotnet/api/System.Collections.Generic.List-1" title="System.Collections.Generic.List`1" target="_blank" rel="noreferrer">&gt;</a></p>',9),o=[r];function n(l,h,p,c,d,m){return t(),s("div",null,o)}const f=e(i,[["render",n]]);export{_ as __pageData,f as default};
