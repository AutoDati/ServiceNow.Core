import{_ as t,c as e,o as s,U as i}from"./chunks/framework.WPXu0_gW.js";const _=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"auto/QueryBuilder_T_.md","filePath":"auto/QueryBuilder_T_.md"}'),r={name:"auto/QueryBuilder_T_.md"},a=i('<h4 id="servicenow-core" tabindex="-1"><a href="./" title="index">ServiceNow.Core</a> <a class="header-anchor" href="#servicenow-core" aria-label="Permalink to &quot;[ServiceNow.Core](index.md &#39;index&#39;)&quot;">â€‹</a></h4><h3 id="snow-core-utils" tabindex="-1"><a href="./SNow_Core_Utils.html" title="SNow.Core.Utils">SNow.Core.Utils</a> <a class="header-anchor" href="#snow-core-utils" aria-label="Permalink to &quot;[SNow.Core.Utils](SNow_Core_Utils.md &#39;SNow.Core.Utils&#39;)&quot;">â€‹</a></h3><h2 id="querybuilder-t-class" tabindex="-1">QueryBuilder&lt;T&gt; Class <a class="header-anchor" href="#querybuilder-t-class" aria-label="Permalink to &quot;QueryBuilder&amp;lt;T&amp;gt; Class&quot;">â€‹</a></h2><p>base on <a href="https://www.codeproject.com/Articles/1241363/Expression-Tree-Traversal-Via-Visitor-Pattern-in-P" title="https://www.codeproject.com/Articles/1241363/Expression-Tree-Traversal-Via-Visitor-Pattern-in-P" target="_blank" rel="noreferrer"> Expression Tree traversal </a></p><div class="language-csharp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> QueryBuilder</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">T</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; : </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">System</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Linq</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Expressions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ExpressionVisitor</span></span></code></pre></div><h4 id="type-parameters" tabindex="-1">Type parameters <a class="header-anchor" href="#type-parameters" aria-label="Permalink to &quot;Type parameters&quot;">â€‹</a></h4><p><a name="SNow_Core_Utils_QueryBuilder_T__T"></a><code>T</code></p><p>Inheritance <a href="https://docs.microsoft.com/en-us/dotnet/api/System.Object" title="System.Object" target="_blank" rel="noreferrer">System.Object</a> ðŸ¡’ <a href="https://docs.microsoft.com/en-us/dotnet/api/System.Linq.Expressions.ExpressionVisitor" title="System.Linq.Expressions.ExpressionVisitor" target="_blank" rel="noreferrer">System.Linq.Expressions.ExpressionVisitor</a> ðŸ¡’ QueryBuilder&lt;T&gt;</p><table><thead><tr><th style="text-align:left;">Constructors</th><th style="text-align:left;"></th></tr></thead><tbody><tr><td style="text-align:left;"><a href="./QueryBuilder_T__QueryBuilder(Expression_Func_T_bool__).html" title="SNow.Core.Utils.QueryBuilder&lt;T&gt;.QueryBuilder(System.Linq.Expressions.Expression&lt;System.Func&lt;T,bool&gt;&gt;)">QueryBuilder(Expression&lt;Func&lt;T,bool&gt;&gt;)</a></td><td style="text-align:left;"></td></tr></tbody></table><table><thead><tr><th style="text-align:left;">Properties</th><th style="text-align:left;"></th></tr></thead><tbody><tr><td style="text-align:left;"><a href="./QueryBuilder_T__query.html" title="SNow.Core.Utils.QueryBuilder&lt;T&gt;.query">query</a></td><td style="text-align:left;"></td></tr></tbody></table><table><thead><tr><th style="text-align:left;">Methods</th><th style="text-align:left;"></th></tr></thead><tbody><tr><td style="text-align:left;"><a href="./QueryBuilder_T__BuildQuery().html" title="SNow.Core.Utils.QueryBuilder&lt;T&gt;.BuildQuery()">BuildQuery()</a></td><td style="text-align:left;"></td></tr></tbody></table>',11),l=[a];function o(n,h,d,p,u,c){return s(),e("div",null,l)}const k=t(r,[["render",o]]);export{_ as __pageData,k as default};
