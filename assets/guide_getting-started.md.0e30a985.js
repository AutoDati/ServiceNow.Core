import{_ as n,c as s,o as a,d as t}from"./app.a79812d4.js";const y='{"title":"Getting Started","description":"","frontmatter":{},"headers":[{"level":2,"title":"Getting Started","slug":"getting-started"},{"level":2,"title":"Not typed","slug":"not-typed"},{"level":2,"title":"Typed","slug":"typed"}],"relativePath":"guide/getting-started.md","lastUpdated":1642808177167}',p={},e=t(`<h2 id="getting-started" tabindex="-1">Getting Started <a class="header-anchor" href="#getting-started" aria-hidden="true">#</a></h2><ul><li>Install the <a href="https://www.nuget.org/packages/ServiceNow.Core/" target="_blank" rel="noopener noreferrer">nuget package</a></li><li>See <a href="/config/Authentication.html">Configurations</a> to setup Authentication as well Custom Serializers</li><li>Create an instance of ServiceNow.</li></ul><div class="language-csharp"><pre><code><span class="token class-name"><span class="token keyword">var</span></span> config <span class="token operator">=</span> BasicAuthenticationConfig<span class="token punctuation">.</span><span class="token function">ReadFromJsonFile</span><span class="token punctuation">(</span><span class="token string">&quot;appsettings.json&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">var</span></span> ServiceNow <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">ServiceNow</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><ul><li>It is possible to use Injection as well</li></ul><div class="language-csharp"><pre><code>services<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">AddSingleton</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>IServiceNow<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">ServiceNow</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="not-typed" tabindex="-1">Not typed <a class="header-anchor" href="#not-typed" aria-hidden="true">#</a></h2><ul><li>Create a Table Instance (Not Typed) and set request parameters</li></ul><div class="language-csharp"><pre><code><span class="token class-name"><span class="token keyword">var</span></span> usersTableNotTyped <span class="token operator">=</span> ServiceNow
    <span class="token punctuation">.</span><span class="token function">UsingTable</span><span class="token punctuation">(</span><span class="token string">&quot;sys_user&quot;</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">Limit</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">WithQuery</span><span class="token punctuation">(</span><span class="token string">&quot;name like Branco and country = BR&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// The request is only made when ToListAsync is used.</span>
<span class="token class-name"><span class="token keyword">var</span></span> usersNotTyped <span class="token operator">=</span> <span class="token keyword">await</span> usersTableNotTyped<span class="token punctuation">.</span><span class="token function">ToListAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">while</span> <span class="token punctuation">(</span>usersNotTyped<span class="token punctuation">.</span>Count <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    usersNotTyped<span class="token punctuation">.</span><span class="token function">ForEach</span><span class="token punctuation">(</span>userNotTyped <span class="token operator">=&gt;</span> userNotTyped<span class="token punctuation">.</span><span class="token function">Display</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//pagination is handled automatically and will be reset when we receive a response with 0 elements.</span>
    usersNotTyped <span class="token operator">=</span> <span class="token keyword">await</span> usersTableNotTyped<span class="token punctuation">.</span><span class="token function">ToListAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><h2 id="typed" tabindex="-1">Typed <a class="header-anchor" href="#typed" aria-hidden="true">#</a></h2><ul><li><p>Create a Table Instance (Typed) and set request parameters To use types version it is needed an class inherited from ServiceNowBaseModel</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Use Attributes to map table names (SnowTable) and properties (JsonPropertyName) used in ServiceNow.</p></div></li></ul><p>Creating an table class model</p><div class="language-csharp"><pre><code>    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">SnowTable</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;sys_user&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">User</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">ServiceNowBaseModel</span></span>
    <span class="token punctuation">{</span>
        <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> Country <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
        <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> State <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
        <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> Name <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
        <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">JsonPropertyName</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;u_city_code&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
        <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> CityCode <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
        <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> Email <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

        <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">JsonPropertyName</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;user_name&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
        <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> LanID <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

        <span class="token keyword">public</span> <span class="token keyword">override</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> <span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token interpolation-string"><span class="token string">$&quot;user:</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">Name</span><span class="token punctuation">}</span></span><span class="token string">, State:</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">State</span><span class="token punctuation">}</span></span><span class="token string">, CityCode:</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">CityCode</span><span class="token punctuation">}</span></span><span class="token string">, email:</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">Email</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre></div><p>Creating an table instance</p><div class="language-csharp"><pre><code><span class="token class-name"><span class="token keyword">var</span></span> usersTable <span class="token operator">=</span> ServiceNow
    <span class="token punctuation">.</span><span class="token generic-method"><span class="token function">UsingTable</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>User<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;sys_user&quot;</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">Limit</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span>x <span class="token operator">=&gt;</span> x<span class="token punctuation">.</span>Name<span class="token punctuation">.</span><span class="token function">Contains</span><span class="token punctuation">(</span><span class="token string">&quot;Branco&quot;</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> x<span class="token punctuation">.</span>Country <span class="token operator">=</span> <span class="token string">&quot;BR&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h1 id="more-examples" tabindex="-1">More Examples <a class="header-anchor" href="#more-examples" aria-hidden="true">#</a></h1><div class="language-csharp"><pre><code><span class="token comment">//Creating a table instance</span>
<span class="token class-name"><span class="token keyword">var</span></span> incidentsTableNotTyped <span class="token operator">=</span> ServiceNow
    <span class="token punctuation">.</span><span class="token function">UsingTable</span><span class="token punctuation">(</span><span class="token string">&quot;incident&quot;</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">Limit</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//Getting data</span>
<span class="token class-name"><span class="token keyword">var</span></span> incidentsNotTyped <span class="token operator">=</span> <span class="token keyword">await</span> incidentsTableNotTyped
        <span class="token punctuation">.</span><span class="token function">Select</span><span class="token punctuation">(</span><span class="token keyword">new</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span> <span class="token string">&quot;sys_id&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;short_description&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">WithQuery</span><span class="token punctuation">(</span><span class="token string">&quot;short_description like some nice&quot;</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">OrderBy</span><span class="token punctuation">(</span><span class="token string">&quot;sys_id&quot;</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">ToListAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//Updating</span>
incidentsNotTyped<span class="token punctuation">.</span><span class="token function">ForEach</span><span class="token punctuation">(</span><span class="token keyword">async</span> incident <span class="token operator">=&gt;</span>
<span class="token punctuation">{</span>
    <span class="token class-name">Guid</span> id <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Guid</span><span class="token punctuation">(</span>incident<span class="token punctuation">.</span><span class="token function">GetProperty</span><span class="token punctuation">(</span><span class="token string">&quot;sys_id&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">ExpandoObject</span> inc <span class="token operator">=</span> incident<span class="token punctuation">.</span><span class="token function">ToObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    inc<span class="token punctuation">.</span><span class="token function">UpdateProp</span><span class="token punctuation">(</span><span class="token string">&quot;short_description&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;changed description on non typed value&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name"><span class="token keyword">var</span></span> changed <span class="token operator">=</span> <span class="token keyword">await</span> incidentsTableNotTyped<span class="token punctuation">.</span><span class="token function">Update</span><span class="token punctuation">(</span>id<span class="token punctuation">,</span> inc<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>changed<span class="token punctuation">)</span>
        Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">&quot;Incident Changed&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">else</span>
        Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">&quot;Incident NOT Changed&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div>`,16),o=[e];function c(u,l,i,k,r,d){return a(),s("div",null,o)}var m=n(p,[["render",c]]);export{y as __pageData,m as default};
