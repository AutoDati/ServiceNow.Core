import{_ as t,c as e,o as l,U as a}from"./chunks/framework.WPXu0_gW.js";const g=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"auto/ITable.md","filePath":"auto/ITable.md"}'),i={name:"auto/ITable.md"},n=a('<h4 id="servicenow-core" tabindex="-1"><a href="./" title="index">ServiceNow.Core</a> <a class="header-anchor" href="#servicenow-core" aria-label="Permalink to &quot;[ServiceNow.Core](index.md &#39;index&#39;)&quot;">​</a></h4><h3 id="snow-core" tabindex="-1"><a href="./SNow_Core.html" title="SNow.Core">SNow.Core</a> <a class="header-anchor" href="#snow-core" aria-label="Permalink to &quot;[SNow.Core](SNow_Core.md &#39;SNow.Core&#39;)&quot;">​</a></h3><h2 id="itable-interface" tabindex="-1">ITable Interface <a class="header-anchor" href="#itable-interface" aria-label="Permalink to &quot;ITable Interface&quot;">​</a></h2><p>Handle ServiceNow tables API</p><div class="language-csharp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> interface</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ITable</span></span></code></pre></div><p>Derived<br> ↳ <a href="./Table.html" title="SNow.Core.Table">Table</a></p><table><thead><tr><th style="text-align:left;">Properties</th><th style="text-align:left;"></th></tr></thead><tbody><tr><td style="text-align:left;"><a href="./ITable_RequestUrl.html" title="SNow.Core.ITable.RequestUrl">RequestUrl</a></td><td style="text-align:left;"></td></tr></tbody></table><table><thead><tr><th style="text-align:left;">Methods</th><th style="text-align:left;"></th></tr></thead><tbody><tr><td style="text-align:left;"><a href="./ITable_AllToListAsync().html" title="SNow.Core.ITable.AllToListAsync()">AllToListAsync()</a></td><td style="text-align:left;">Makes HTTP requests to get all data (from all pages)</td></tr><tr><td style="text-align:left;"><a href="./ITable_AllToListAsync(CancellationToken).html" title="SNow.Core.ITable.AllToListAsync(System.Threading.CancellationToken)">AllToListAsync(CancellationToken)</a></td><td style="text-align:left;">Makes HTTP requests to get all data (from all pages)</td></tr><tr><td style="text-align:left;"><a href="./ITable_CreateAsync(object_CancellationToken).html" title="SNow.Core.ITable.CreateAsync(object, System.Threading.CancellationToken)">CreateAsync(object, CancellationToken)</a></td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;"><a href="./ITable_CreateAsync(object).html" title="SNow.Core.ITable.CreateAsync(object)">CreateAsync(object)</a></td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;"><a href="./ITable_DeleteAsync(Guid_CancellationToken).html" title="SNow.Core.ITable.DeleteAsync(System.Guid, System.Threading.CancellationToken)">DeleteAsync(Guid, CancellationToken)</a></td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;"><a href="./ITable_DeleteAsync(Guid).html" title="SNow.Core.ITable.DeleteAsync(System.Guid)">DeleteAsync(Guid)</a></td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;"><a href="./ITable_GetByIdAsync(Guid_CancellationToken).html" title="SNow.Core.ITable.GetByIdAsync(System.Guid, System.Threading.CancellationToken)">GetByIdAsync(Guid, CancellationToken)</a></td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;"><a href="./ITable_GetByIdAsync(Guid).html" title="SNow.Core.ITable.GetByIdAsync(System.Guid)">GetByIdAsync(Guid)</a></td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;"><a href="./ITable_Limit(int).html" title="SNow.Core.ITable.Limit(int)">Limit(int)</a></td><td style="text-align:left;">The maximum number of results returned per page (default: 10,000)</td></tr><tr><td style="text-align:left;"><a href="./ITable_OrderBy(string).html" title="SNow.Core.ITable.OrderBy(string)">OrderBy(string)</a></td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;"><a href="./ITable_OrderByDesc(string).html" title="SNow.Core.ITable.OrderByDesc(string)">OrderByDesc(string)</a></td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;"><a href="./ITable_Select(string__).html" title="SNow.Core.ITable.Select(string[])">Select(string[])</a></td><td style="text-align:left;">List of properties to return, <br> impacts the size of the response</td></tr><tr><td style="text-align:left;"><a href="./ITable_SetHeaders(List_KeyValuePair_string_string__).html" title="SNow.Core.ITable.SetHeaders(System.Collections.Generic.List&lt;System.Collections.Generic.KeyValuePair&lt;string,string&gt;&gt;)">SetHeaders(List&lt;KeyValuePair&lt;string,string&gt;&gt;)</a></td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;"><a href="./ITable_ToListAsync(Nullable_int_).html" title="SNow.Core.ITable.ToListAsync(System.Nullable&lt;int&gt;)">ToListAsync(Nullable&lt;int&gt;)</a></td><td style="text-align:left;">Makes the actual HTTP request</td></tr><tr><td style="text-align:left;"><a href="./ITable_ToListAsync(CancellationToken_Nullable_int_).html" title="SNow.Core.ITable.ToListAsync(System.Threading.CancellationToken, System.Nullable&lt;int&gt;)">ToListAsync(CancellationToken, Nullable&lt;int&gt;)</a></td><td style="text-align:left;">Makes the actual HTTP request</td></tr><tr><td style="text-align:left;"><a href="./ITable_UpdateAsync(Guid_object_bool).html" title="SNow.Core.ITable.UpdateAsync(System.Guid, object, bool)">UpdateAsync(Guid, object, bool)</a></td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;"><a href="./ITable_UpdateAsync(Guid_object_CancellationToken_bool).html" title="SNow.Core.ITable.UpdateAsync(System.Guid, object, System.Threading.CancellationToken, bool)">UpdateAsync(Guid, object, CancellationToken, bool)</a></td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;"><a href="./ITable_WithQuery(string).html" title="SNow.Core.ITable.WithQuery(string)">WithQuery(string)</a></td><td style="text-align:left;">The query must have only those operators <br> and, or, like, =, !=, startsWith, endsWith <br> see <a href="https://docs.servicenow.com/bundle/rome-application-development/page/integrate/inbound-rest/concept/c_RESTAPI.html" title="https://docs.servicenow.com/bundle/rome-application-development/page/integrate/inbound-rest/concept/c_RESTAPI.html" target="_blank" rel="noreferrer">SN Rest Operators</a></td></tr></tbody></table>',8),r=[n];function s(o,d,c,y,h,b){return l(),e("div",null,r)}const f=t(i,[["render",s]]);export{g as __pageData,f as default};
