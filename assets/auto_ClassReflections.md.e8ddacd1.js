import{_ as e,c as t,o as s,d as a}from"./app.af3b1c6a.js";const C='{"title":"ServiceNow.Core","description":"","frontmatter":{},"headers":[{"level":3,"title":"SNow.Core.Utils","slug":"snow-core-utils"},{"level":2,"title":"ClassReflections Class","slug":"classreflections-class"}],"relativePath":"auto/ClassReflections.md"}',l={name:"auto/ClassReflections.md"},o=a(`<h4 id="servicenow-core" tabindex="-1"><a href="./" title="index">ServiceNow.Core</a> <a class="header-anchor" href="#servicenow-core" aria-hidden="true">#</a></h4><h3 id="snow-core-utils" tabindex="-1"><a href="./SNow_Core_Utils.html" title="SNow.Core.Utils">SNow.Core.Utils</a> <a class="header-anchor" href="#snow-core-utils" aria-hidden="true">#</a></h3><h2 id="classreflections-class" tabindex="-1">ClassReflections Class <a class="header-anchor" href="#classreflections-class" aria-hidden="true">#</a></h2><div class="language-csharp"><span class="copy"></span><pre><code><span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">static</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">ClassReflections</span></span>
<span class="line"></span></code></pre></div><p>Inheritance <a href="https://docs.microsoft.com/en-us/dotnet/api/System.Object" title="System.Object" target="_blank" rel="noopener noreferrer">System.Object</a> \u{1F852} ClassReflections</p><table><thead><tr><th style="text-align:left;">Methods</th><th style="text-align:left;"></th></tr></thead><tbody><tr><td style="text-align:left;"><a href="./ClassReflections_GetJsonPropertyNameData_T_().html" title="SNow.Core.Utils.ClassReflections.GetJsonPropertyNameData&lt;T&gt;()">GetJsonPropertyNameData&lt;T&gt;()</a></td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;"><a href="./ClassReflections_GetPropertieNamesInJsonFormat_T_().html" title="SNow.Core.Utils.ClassReflections.GetPropertieNamesInJsonFormat&lt;T&gt;()">GetPropertieNamesInJsonFormat&lt;T&gt;()</a></td><td style="text-align:left;">Return a list of json property names found, if no json name is found per property, it return the property name instead</td></tr></tbody></table>`,6),r=[o];function n(i,c,p,d,h,f){return s(),t("div",null,r)}var m=e(l,[["render",n]]);export{C as __pageData,m as default};
